#!/usr/bin/env python3
"""
Script de teste para o sistema de autentica√ß√£o
Execute: python test_auth.py
"""

import requests
import json
from datetime import datetime

# Configura√ß√£o
BASE_URL = "http://localhost:8000"
API_URL = f"{BASE_URL}/api/v1"

def test_auth_system():
    """Testa o sistema de autentica√ß√£o completo"""
    
    print("üß™ Testando Sistema de Autentica√ß√£o VZR-LBS")
    print("=" * 50)
    
    # 1. Teste de cadastro b√°sico
    print("\n1Ô∏è‚É£ Testando cadastro b√°sico...")
    signup_data = {
        "email": "teste@exemplo.com",
        "name": "Usu√°rio Teste",
        "password": "senha123"
    }
    
    try:
        response = requests.post(f"{API_URL}/signup", json=signup_data)
        print(f"Status: {response.status_code}")
        print(f"Resposta: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
        
        if response.status_code == 200:
            print("‚úÖ Cadastro realizado com sucesso!")
        else:
            print("‚ùå Erro no cadastro")
            
    except Exception as e:
        print(f"‚ùå Erro na requisi√ß√£o: {e}")
    
    # 2. Teste de login b√°sico
    print("\n2Ô∏è‚É£ Testando login b√°sico...")
    signin_data = {
        "providerAuth": "basic",
        "email": "teste@exemplo.com",
        "senhaHash": "senha123"
    }
    
    try:
        response = requests.post(f"{API_URL}/signin", json=signin_data)
        print(f"Status: {response.status_code}")
        print(f"Resposta: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
        
        if response.status_code == 200:
            auth_data = response.json()
            access_token = auth_data.get("data", {}).get("access_token")
            print("‚úÖ Login realizado com sucesso!")
            
            # 3. Teste de endpoint protegido
            print("\n3Ô∏è‚É£ Testando endpoint protegido...")
            headers = {"Authorization": f"Bearer {access_token}"}
            response = requests.get(f"{API_URL}/me", headers=headers)
            print(f"Status: {response.status_code}")
            print(f"Resposta: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
            
            if response.status_code == 200:
                print("‚úÖ Endpoint protegido acessado com sucesso!")
            else:
                print("‚ùå Erro ao acessar endpoint protegido")
                
        else:
            print("‚ùå Erro no login")
            
    except Exception as e:
        print(f"‚ùå Erro na requisi√ß√£o: {e}")
    
    # 4. Teste de cadastro social
    print("\n4Ô∏è‚É£ Testando cadastro social (Google)...")
    signup_social_data = {
        "email": "usuario@gmail.com",
        "name": "Usu√°rio Google",
        "providerAuth": "google",
        "providerId": "google_user_123"
    }
    
    try:
        response = requests.post(f"{API_URL}/signup", json=signup_social_data)
        print(f"Status: {response.status_code}")
        print(f"Resposta: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
        
        if response.status_code == 200:
            print("‚úÖ Cadastro social realizado com sucesso!")
        else:
            print("‚ùå Erro no cadastro social")
            
    except Exception as e:
        print(f"‚ùå Erro na requisi√ß√£o: {e}")
    
    # 5. Teste de login social
    print("\n5Ô∏è‚É£ Testando login social (Google)...")
    signin_social_data = {
        "providerAuth": "google",
        "email": "usuario@gmail.com"
    }
    
    try:
        response = requests.post(f"{API_URL}/signin", json=signin_social_data)
        print(f"Status: {response.status_code}")
        print(f"Resposta: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
        
        if response.status_code == 200:
            print("‚úÖ Login social realizado com sucesso!")
        else:
            print("‚ùå Erro no login social")
            
    except Exception as e:
        print(f"‚ùå Erro na requisi√ß√£o: {e}")
    
    print("\n" + "=" * 50)
    print("üèÅ Teste conclu√≠do!")
    print(f"üìÖ Timestamp: {datetime.now().isoformat()}")

def test_server_status():
    """Testa se o servidor est√° rodando"""
    try:
        response = requests.get(f"{BASE_URL}/health")
        if response.status_code == 200:
            print("‚úÖ Servidor est√° rodando!")
            return True
        else:
            print("‚ùå Servidor n√£o est√° respondendo corretamente")
            return False
    except Exception as e:
        print(f"‚ùå Servidor n√£o est√° rodando: {e}")
        print("üí° Execute: python main.py")
        return False

if __name__ == "__main__":
    print("üöÄ Iniciando testes do sistema de autentica√ß√£o...")
    
    if test_server_status():
        test_auth_system()
    else:
        print("\n‚ùå N√£o foi poss√≠vel executar os testes.")
        print("üí° Certifique-se de que o servidor est√° rodando com: python main.py")
